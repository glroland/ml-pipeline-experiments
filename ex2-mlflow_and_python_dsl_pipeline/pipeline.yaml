# PIPELINE DEFINITION
# Name: ex2-pipeline
# Inputs:
#    env: dict
#    git_url: str
components:
  comp-run-notebook-out-of-proc:
    executorLabel: exec-run-notebook-out-of-proc
    inputDefinitions:
      parameters:
        git_url:
          parameterType: STRING
        notebook_name:
          parameterType: STRING
        parameters:
          parameterType: STRUCT
        run_from_dir:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        jupyter_nb_output:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-run-notebook-out-of-proc:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - run_notebook_out_of_proc
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'papermill'\
          \ 'GitPython' 'ipykernel' 'jupyter' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef run_notebook_out_of_proc(git_url: str,\n                    \
          \         run_from_dir: str,\n                             notebook_name:\
          \ str,\n                             parameters: dict,\n               \
          \              jupyter_nb_output: Output[Artifact],\n                  \
          \           model: Output[Model]):\n    # setup output directories\n   \
          \ import os\n    temp_path = \"/tmp\"\n    temp_repo_path = os.path.join(temp_path,\
          \ \"repo\")\n    temp_nb_output_dir = os.path.join(temp_path, \"nb_output\"\
          )\n\n    # clone git repo\n    print (f\"Cloning Git Repo.  URL={git_url}\
          \ TempRepoPath={temp_repo_path}\")\n    from git import Repo\n    Repo.clone_from(git_url,temp_repo_path)\n\
          \n    # build parameter list\n    primary_parameter_list = dict(onnx_path\
          \ = model.path,\n                                  output_dir = temp_nb_output_dir)\n\
          \    primary_parameter_list.update(parameters)\n    print (f\"Parameters:\
          \ {primary_parameter_list}\")\n\n    # change run directory\n    new_dir\
          \ = os.path.join(temp_repo_path, run_from_dir)\n    print (f\"Changing directory\
          \ to: {new_dir}\")\n    os.chdir(new_dir)\n\n    # run notebook\n    print\
          \ (f\"Running notebook.  Filename={notebook_name}\")\n    import papermill\
          \ as pm\n    pm.execute_notebook(\n        notebook_name,\n        jupyter_nb_output.path,\n\
          \        parameters=primary_parameter_list,\n        kernel_name=\"\"\n\
          \    )\n\n"
        image: quay.io/modh/runtime-images:runtime-pytorch-ubi9-python-3.11-20250130
pipelineInfo:
  name: ex2-pipeline
root:
  dag:
    tasks:
      run-notebook-out-of-proc:
        cachingOptions: {}
        componentRef:
          name: comp-run-notebook-out-of-proc
        inputs:
          parameters:
            git_url:
              componentInputParameter: git_url
            notebook_name:
              runtimeValue:
                constant: mlflow_parameters.ipynb
            parameters:
              componentInputParameter: env
            run_from_dir:
              runtimeValue:
                constant: ex2-mlflow_and_python_dsl_pipeline
        taskInfo:
          name: mlflow-experiment
  inputDefinitions:
    parameters:
      env:
        parameterType: STRUCT
      git_url:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.11.0
