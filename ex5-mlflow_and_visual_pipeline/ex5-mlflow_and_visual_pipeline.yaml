# PIPELINE DEFINITION
# Name: ex5-mlflow-and-visual-pipeline
components:
  comp-run-a-file:
    executorLabel: exec-run-a-file
deploymentSpec:
  executors:
    exec-run-a-file:
      container:
        args:
        - 'sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"

          sh -c "[[ -e ''/opt/app-root/bin/utils/bootstrapper.py'' ]] && (echo ''bootstrapper.py
          file already exists''; cp ''/opt/app-root/bin/utils/bootstrapper.py'' .)
          || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.1/elyra/kfp/bootstrapper.py'';
          curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.1/elyra/kfp/bootstrapper.py''
          --output bootstrapper.py)"

          sh -c "[[ -e ''/opt/app-root/bin/utils/requirements-elyra.txt'' ]] && (echo
          ''requirements-elyra.txt file already exists''; cp ''/opt/app-root/bin/utils/requirements-elyra.txt''
          .) || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.1/etc/generic/requirements-elyra.txt'';
          curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.1/etc/generic/requirements-elyra.txt''
          --output requirements-elyra.txt)"

          sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt
          && python3 bootstrapper.py --pipeline-name ''ex5-mlflow_and_visual_pipeline''
          --cos-endpoint ''https://eclipse.home.glroland.com:9000'' --cos-bucket ''testing''
          --cos-directory ''ex5-mlflow_and_visual_pipeline-0805002710'' --cos-dependencies-archive
          ''mlflow_external_envs-7090b838-23f8-463b-950d-a53b71f9f038.tar.gz'' --file
          ''ml-pipeline-experiments/ex5-mlflow_and_visual_pipeline/mlflow_external_envs.ipynb''
          "

          '
        command:
        - sh
        - -c
        env:
        - name: AWS_DEFAULT_REGION
          value: lab
        - name: MLFLOW_S3_ENDPOINT_URL
          value: https://eclipse.home.glroland.com:9000
        - name: MLFLOW_S3_IGNORE_TLS
          value: 'true'
        - name: ELYRA_RUNTIME_ENV
          value: kfp
        - name: ELYRA_ENABLE_PIPELINE_INFO
          value: 'True'
        - name: ELYRA_WRITABLE_CONTAINER_DIR
          value: /tmp
        - name: ELYRA_RUN_NAME
          value: '{{workflow.uid}}'
        image: quay.io/modh/runtime-images@sha256:a6e87550d7f932732b8e52c309d356fb76ae0ba0fd0b8566de0ba4ff49c2db84
pipelineInfo:
  name: ex5-mlflow-and-visual-pipeline
root:
  dag:
    tasks:
      run-a-file:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-run-a-file
        taskInfo:
          name: mlflow_external_envs
schemaVersion: 2.1.0
sdkVersion: kfp-2.12.2
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-run-a-file:
          podMetadata:
            annotations:
              elyra/node-file-name: ml-pipeline-experiments/ex5-mlflow_and_visual_pipeline/mlflow_external_envs.ipynb
              elyra/pipeline-source: ex5-mlflow_and_visual_pipeline.pipeline
            labels:
              elyra/experiment-name: ''
              elyra/node-name: mlflow_external_envs
              elyra/node-type: notebook-script
              elyra/pipeline-name: ex5-mlflow_and_visual_pipeline
              elyra/pipeline-version: ''
          secretAsEnv:
          - keyToEnv:
            - envVar: AWS_ACCESS_KEY_ID
              secretKey: AWS_ACCESS_KEY_ID
            - envVar: AWS_SECRET_ACCESS_KEY
              secretKey: AWS_SECRET_ACCESS_KEY
            secretName: dashboard-dspa-secret
            secretNameParameter:
              runtimeValue:
                constant: dashboard-dspa-secret
